[gd_scene load_steps=13 format=2]

[ext_resource path="res://paddle.gd" type="Script" id=1]
[ext_resource path="res://a.png" type="Texture" id=2]
[ext_resource path="res://ball.png" type="Texture" id=3]
[ext_resource path="res://Ball.tscn" type="PackedScene" id=4]
[ext_resource path="res://Area2D.gd" type="Script" id=5]
[ext_resource path="res://anchor.png" type="Texture" id=6]
[ext_resource path="res://Obstacle.tscn" type="PackedScene" id=7]

[sub_resource type="GDScript" id=1]
script/source = "extends Node2D
var radius = 100
var centerPosX= 0
var centerPosY = 0
var center = Vector2(centerPosX, centerPosY)
func _draw():
	draw_circle_arc(center, radius+15, 0, 360, Color(1.0, 1.0, 1.0))
	
func draw_circle_arc(center, radius, angle_from, angle_to, color):
    var nb_points = 32
    var points_arc = PoolVector2Array()

    for i in range(nb_points + 1):
        var angle_point = deg2rad(angle_from + i * (angle_to-angle_from) / nb_points - 90)
        points_arc.push_back(center + Vector2(cos(angle_point), sin(angle_point)) * radius)

    for index_point in range(nb_points):
        draw_line(points_arc[index_point], points_arc[index_point + 1], color)

func _process(delta):
	#width = get_viewport_rect().size[0]
	#heigth = get_viewport_rect().size[1]
	#radius = width/15
	var which = get_name()
	#position.x = centerPosX+radius*cos(angle)
	#position.y = centerPosY+radius*sin(angle)
	#angle +=0.03
	update()
	
func _input(event):
	# Mouse in viewport coordinates
	if event is InputEventMouseButton:
		print(\"Mouse Click/Unclick at: \", event.position)
		
		centerPosX = event.position.x
		centerPosY = event.position.y
		center = Vector2(centerPosX,centerPosY)"

[sub_resource type="CircleShape2D" id=2]

[sub_resource type="GDScript" id=3]
script/source = "extends Area2D


const BALL_SPEED = 100
var direction = Vector2(-1, 0)
var speed = BALL_SPEED

onready var initial_pos = self.position

func reset():
	position = initial_pos
	speed = BALL_SPEED
	direction = Vector2(-1, 0)

func create():
	var scene = load(\"res://Obstacle.tscn\") # Will load when the script is instanced.

	
func _process(delta):
	var width = get_viewport_rect().size[0]
	var heigth = get_viewport_rect().size[1]
	position.x = width/2
	position.y = heigth/2
	var obstacle_ress = preload(\"res://Obstacle.tscn\")
	var obstacle = obstacle_ress.instance()
	obstacle.set_position(Vector2(position.x,position.y))
	get_parent().add_child(obstacle) 
	
	
"

[sub_resource type="ImageTexture" id=4]

[sub_resource type="GDScript" id=5]
script/source = "extends RigidBody2D

# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"

# Called when the node enters the scene tree for the first time.
func _ready():
	pass # Replace with function body.

# Called every frame. 'delta' is the elapsed time since the previous frame.
#func _process(delta):
#	pass
"

[node name="game" type="Node2D"]
script = SubResource( 1 )

[node name="player" type="Area2D" parent="."]
position = Vector2( 67.6285, 192.594 )
script = ExtResource( 1 )

[node name="sprite" type="Sprite" parent="player"]
scale = Vector2( 0.2, 0.2 )
texture = ExtResource( 2 )

[node name="collision" type="CollisionShape2D" parent="player"]
shape = SubResource( 2 )

[node name="Center" type="Area2D" parent="."]
position = Vector2( 148.922, 124.468 )
scale = Vector2( 10, 10 )
collision_layer = 0
collision_mask = 0
script = SubResource( 3 )

[node name="sprite" type="Sprite" parent="Center"]
texture = ExtResource( 3 )
normal_map = SubResource( 4 )

[node name="Ball" parent="." instance=ExtResource( 4 )]
script = SubResource( 5 )

[node name="anchor" type="Area2D" parent="."]
script = ExtResource( 5 )

[node name="Sprite" type="Sprite" parent="anchor"]
scale = Vector2( 0.2, 0.2 )
texture = ExtResource( 6 )

[node name="Obstacle" parent="." instance=ExtResource( 7 )]
[connection signal="area_entered" from="player" to="player" method="_on_area_entered"]
